{"version":3,"file":"main.js","mappings":"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","sources":["webpack://gulp-html-scss/./src/js/library/sumbiot/core/index.js","webpack://gulp-html-scss/./src/js/library/sumbiot/modules/modal/index.js","webpack://gulp-html-scss/./src/js/library/sumbiot/modules/modal/components/modal.js","webpack://gulp-html-scss/./src/js/main.ts","webpack://gulp-html-scss/./src/js/modules/tabs.ts"],"sourcesContent":["\r\n/**\r\n *  Ядро Sumbiot\r\n * */\r\nexport default class Core {\r\n\r\n  /**\r\n   * Ширина скролла прокрутки\r\n   * @return {number}\r\n   */\r\n  calcScroll() {\r\n    let div = document.createElement('div');\r\n\r\n    div.style.width = '50px';\r\n    div.style.height = '50px';\r\n    div.style.overflowY = 'scroll';\r\n    div.style.visibility = 'hidden';\r\n\r\n    document.body.appendChild(div);\r\n\r\n    let scrollWidth = div.offsetWidth - div.clientWidth;\r\n\r\n    div.remove();\r\n\r\n    return scrollWidth;\r\n  }\r\n\r\n  /**\r\n   * Переполнение document\r\n   * @param {string} overflow - переполнения документа\r\n   * @param {string} marginRight - отступ документа с право\r\n   * @return {void}\r\n   */\r\n  overflowBody(overflow= '',marginRight = '') {\r\n    document.body.style.overflow = overflow;\r\n    document.body.style.marginRight = marginRight ? `${marginRight}px` : '';\r\n  }\r\n\r\n\r\n}\r\n","import Core from \"../../core\"\r\n\r\n/**\r\n *  Модальное окно Ядро\r\n * */\r\nexport default class ModalCore extends Core {\r\n\r\n  /**\r\n   * Добавляет новый метод к модалки, не изменяя исходный код класса(первоначальную реализацию) {паттерн Visitor}\r\n   * @param {Function} visitor - добавляет функционал instanceClass\r\n   * @return {this}\r\n   */\r\n  accept(visitor) {\r\n    visitor(this)\r\n\r\n    return this\r\n  }\r\n}\r\n","import ModalCore from \"../\";\r\n\r\n/**\r\n *  Модальное окно стандарт\r\n * */\r\nexport default class Modal extends ModalCore {\r\n\r\n  /**\r\n   * Конструктор\r\n   * @param {string} triggerSelector - селектор который открывает модальное окно.\r\n   * @param {string} modalSelector   - селектор модального окна которое мы будем открывать\r\n   *\r\n   * @param {Object=}     options                     - конфигурация.\r\n   *\r\n   * @param {string}      [options.closeSelector]     - селектор который закрывает модальное окно\r\n   * @param {boolean}     [options.closeClickOverlay] - будет ли закрываться окно по клику по подложки\r\n   *\r\n   * @param {string}      [options.modalGroup]        - группирует модалки в группы\r\n   *\r\n   * @param {null|string} [options.modalParent]       - селектор родитель куда вставляем модальное окно.\r\n   *\r\n   * @param {boolean}     [options.overflowHidden]    - убрать скролл у документа при появлении модального окна\r\n   *\r\n   * @param {string}      [options.modalDisplay]           - отображение\r\n   */\r\n  constructor(triggerSelector, modalSelector,\r\n              {\r\n                closeSelector = '[data-sumbiot-modal-close]',\r\n                closeClickOverlay = false,\r\n\r\n                modalGroup = '[data-sumbiot-modal]',\r\n\r\n                modalParent = null,\r\n\r\n                overflowHidden = false,\r\n\r\n                modalDisplay = 'block',\r\n              } = {}) {\r\n\r\n    super()\r\n\r\n    this._trigger = triggerSelector\r\n\r\n    this.modal = document.querySelector(modalSelector)\r\n\r\n    this._close = this.modal?.querySelector(closeSelector)\r\n    this._closeClickOverlay = closeClickOverlay || !this.modal?.dataset.sumbiotOverlay || this.modal?.dataset.sumbiotOverlay === 'true' || false\r\n\r\n    this._modalGroup = modalGroup\r\n\r\n    this._modalParent = modalParent || this.modal?.dataset.sumbiotParent || false\r\n\r\n    this._overflowHidden = overflowHidden || (this.modal?.dataset.sumbiotOverflow && this.modal?.dataset.sumbiotOverflow === 'true') || false\r\n\r\n    this._display = modalDisplay\r\n  }\r\n\r\n  /**\r\n   * Инициализация модального окона\r\n   * @return {this|Object}\r\n   */\r\n  init() {\r\n\r\n    if (!this.modal) {\r\n      console.log(\"Проверте у всех ли модальных окон, заданы корректные ID\")\r\n\r\n      return {}\r\n    }\r\n\r\n    this.hideAllModals()\r\n\r\n    this._showHandler()\r\n\r\n    this._closeHandler()\r\n\r\n    return this\r\n  }\r\n\r\n  /**\r\n   * Скрывает все модальные окна\r\n   * @param {boolean} group - скрыть только группу, которые относятся к модальному окну, которое мы хотим показать\r\n   * @return {void}\r\n   */\r\n  hideAllModals(group = false) {\r\n    let modals;\r\n\r\n    if(group) {\r\n      modals = document.querySelectorAll(`${this._modalGroup.slice(0,this._modalGroup.length - 1)}${this.modal.dataset.sumbiotModal ? `=\"${this.modal.dataset.sumbiotModal}\"` : ''}]`);\r\n\r\n      if(!modals.length) {\r\n        modals = document.querySelectorAll(this._modalGroup)\r\n      }\r\n    } else {\r\n      modals = document.querySelectorAll(this._modalGroup)\r\n    }\r\n\r\n    modals.forEach(modal => {\r\n      modal.classList.add('animated', 'fadeIn');\r\n      modal.style.display = 'none';\r\n    })\r\n\r\n    this.overflowBody()\r\n  }\r\n\r\n  /**\r\n   * Обработчик события клика по элементу который открывает модальное окно\r\n   * @return {void}\r\n   */\r\n  _showHandler() {\r\n    document.addEventListener('click', (e) => {\r\n      let target = e.target;\r\n\r\n      if (target && target.matches(this._trigger) || target && target.parentElement?.matches(this._trigger)) {\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n\r\n        if (target.parentElement.matches(this._trigger)){\r\n          target = target.parentElement\r\n        }\r\n\r\n        this._eventTrigger = target\r\n        this.show()\r\n\r\n        setTimeout(() => target.blur(),150)\r\n      }\r\n    }, true)\r\n  }\r\n\r\n  /**\r\n   * Показать модальное окно\r\n   * @return {void}\r\n   */\r\n  show(){\r\n    this.hideAllModals(true)\r\n\r\n    this._modalPosition()\r\n\r\n    this.modal.style.display = this._display;\r\n  }\r\n\r\n  /**\r\n   * Позицианирует модальное окно в нужное место\r\n   * @return {void}\r\n   */\r\n  _modalPosition(){\r\n    if (this._overflowHidden) this.overflowBody('hidden',this.calcScroll())\r\n\r\n    if(this._modalParent) {\r\n      const modalParent = this._eventTrigger.closest(this._modalParent) || document.querySelector(this._modalParent) || this._eventTrigger.parentElement\r\n\r\n      modalParent.append(this.modal)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Обработчик события клика по элементу который закрывает модальное окно\r\n   * @return {void}\r\n   */\r\n  _closeHandler() {\r\n    this._close?.addEventListener('click', (e) => {\r\n      if (e.target) {\r\n        e.preventDefault()\r\n\r\n        this.close()\r\n      }\r\n    })\r\n\r\n    this.modal?.addEventListener('click', (e) => {\r\n      if (e.target) {\r\n        e.stopPropagation()\r\n\r\n        this._closeModalOverlay(e)\r\n      }\r\n    })\r\n\r\n    window.addEventListener(\"keydown\", (e) => {\r\n      if(e.key === \"Escape\" || e.keyCode === 27) {\r\n\r\n        this.hideAllModals()\r\n\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Скрыть модальное окно\r\n   * @return {void}\r\n   */\r\n  close() {\r\n    this.overflowBody()\r\n\r\n    this.modal.style.display = \"none\";\r\n  }\r\n\r\n  /**\r\n   * Скрывает модальне окно по клику на подложку\r\n   * @return {void}\r\n   */\r\n  _closeModalOverlay(e) {\r\n\r\n    if (e.target === this.modal && this._closeClickOverlay) {\r\n      this.overflowBody()\r\n\r\n      this.modal.style.display = \"none\";\r\n    }\r\n  }\r\n\r\n}\r\n","import Modal from \"./library/sumbiot/modules/modal/components/modal\";\r\n\r\nimport tabs from \"./modules/tabs\";\r\n\r\nconsole.log('1')\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n\r\n  console.log('2')\r\n\r\n  // модалка поиск\r\n  const searchModal : Modal = new Modal('.js-search-modal', '#modal-search').init()\r\n\r\n  // модалка фильтр\r\n  const filterModal : Modal = new Modal('.js-filter-modal', '#modal-filter').init()\r\n\r\n  // табы для идей\r\n  tabs('.aTabs', '.aBtn--tab', '.aTabs__content', 'active')\r\n\r\n})\r\n","const tabs = (parentSelector: string, tabSelector: string, contentSelector: string, activeClass: string, display='block') => {\n\n  /**\n   *\n   * МОДУЛЬ ДЛЯ РАБОТЫ С ТАБАМИ\n   *\n   * parentSelector    -> родитель табов\n   * tabSelector       -> селектор пункта меню табов\n   * contentSelector   -> селектор описание табов\n   * activeClass       -> класс активности\n   *\n   */\n\n  document.addEventListener('click', (e: MouseEvent): void => {\n    const target : HTMLElement = e.target as HTMLElement;\n\n    if(target && target.classList.contains(tabSelector.replace(/\\./, \"\")) || target && target.parentElement?.classList.contains(tabSelector.replace(/\\./, \"\"))) {\n\n        // активируем таб\n        tabInit(target)\n    }\n\n  })\n\n  function tabInit(target: HTMLElement) : void {\n    const tabParent : HTMLElement = target.closest(parentSelector);\n\n    const tab : NodeListOf<HTMLElement> = tabParent.querySelectorAll(tabSelector),\n          content: NodeListOf<HTMLElement> = tabParent.querySelectorAll(contentSelector);\n\n\n    tab.forEach((item: HTMLElement, i: number): void => {\n      if (target === item || target.parentNode === item) {\n        hideTabContent(tab, content);\n        showTabContent(tab, content, i);\n      }\n    })\n  }\n\n  function hideTabContent(tab: NodeListOf<HTMLElement>, content: NodeListOf<HTMLElement>) : void {\n    content.forEach((item: HTMLElement) : void => {\n      item.style.display = 'none';\n    });\n\n    tab.forEach(item => {\n      item.classList.remove(activeClass);\n    });\n  }\n\n  function showTabContent(tab: NodeListOf<HTMLElement>, content: NodeListOf<HTMLElement>,i: number = 0): void {\n    content[i].style.display = display;\n    tab[i].classList.add(activeClass);\n  }\n\n};\n\nexport default tabs;\n"],"names":["Core","calcScroll","div","document","createElement","style","width","height","overflowY","visibility","body","appendChild","scrollWidth","offsetWidth","clientWidth","remove","overflowBody","overflow","marginRight","ModalCore","accept","visitor","this","Modal","constructor","triggerSelector","modalSelector","closeSelector","closeClickOverlay","modalGroup","modalParent","overflowHidden","modalDisplay","super","_trigger","modal","querySelector","_close","_closeClickOverlay","dataset","sumbiotOverlay","_modalGroup","_modalParent","sumbiotParent","_overflowHidden","sumbiotOverflow","_display","init","hideAllModals","_showHandler","_closeHandler","console","log","group","modals","querySelectorAll","slice","length","sumbiotModal","forEach","classList","add","display","addEventListener","e","target","matches","parentElement","preventDefault","stopPropagation","_eventTrigger","show","setTimeout","blur","_modalPosition","closest","append","close","_closeModalOverlay","window","key","keyCode","parentSelector","tabSelector","contentSelector","activeClass","contains","replace","tabParent","tab","content","item","i","parentNode","hideTabContent","showTabContent","tabInit"],"sourceRoot":""}